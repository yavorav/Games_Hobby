Brainstorming mechanics, ideas for improvement, and learning from creating this version

How do you make this interactive? to do back and forth with input and function running??

So far it's also only the player being hit. should there be monsters to attack? and then
you have to choose which monster to fight first, it drops loot (heal potions).
Random probability of hitting?
    >> get a better weapon with better probability of hitting?
    >> need an inventory to hold potions, and count how many you have left

    >> turn based combat
    >> enemy will always attack on its turn
    >> you basically have a choice of attack, heal, run
        >> run option will give you "well you didn't die but I guess you're a coward" lol
    
    >> if attack hits are random, can we win? what HP do you and the monster need for 
    the combat to work?
    >> what if it's always a hit but how much damage is what varies? Then mathimatically
    you can make it so you'll always win if damage is always 1, and so you'll probably win
    early

    >> should also define an 'info' function, to remind you of your options and tell
    you what's in your inventory. For quality of life




"""
Brainstorming weapon attributes
damage - flat value
crit rate - probability of dealing bonus damage
crit bonus - value of bonus damage when dealt
description - a fun lil text description of the weapon, of the type shiny sparkly sharp object

Monsters:
1 Troll
4 Chthulu - boss
3 Vampire
2 Zombie

monster stats:
name
HP
special attack - boss only
description
weapon --> will it fight with the same weapon mechanics, or will it just always .hit() each turn?? tbd


add cheat code...? which will level you up to 3 automatically?
    >> add method to player class, cheat = False, then once they cheat it changes to True and they can't use it again
    >> define random string in data
    >> additional check in 'main menu', if text == cheat_code
        >> "you've cheated and leveled up to level 3 without fighting monsters... are you really an adventurer?"

NEXT VERSION ============
classes nested with inheritance for common attributes and methods..? like name, description, .info method, etc?
    -> would need data to be in a uniform format for player, monster, weapon, whatever is gonna be nested
    -> look into dataclass
inventory for diff items, weapon and potions? monster manual telling you monster weaknesses?
    -> each monster weak to a specific weapon type?
    -> adding healing mechanic with potion that you can do during a fight or in the main menu if you ran
    -> potion is a random drop from killing a monster, relatively low chance of dropping
    -> if you have a potion, then the menu option shows up to use it, but if you don't have one then the option isn't there
    -> can you hold more than 1 potion at a time? or only 1 and if you already have one then the monster can't drop one when it dies, or text
        telling you that it dropped one but you can only hold 1 at a time (Old School RuneScape Clue style)
monsters
    -> once you've killed that monster type, it shouldn't be in front of you anymore, ie. can't kill troll 8 times, only once per monster type,
        basically forcing you into the boss fight and finishing the game
        (also forces max level of 3, fight boss, don't make it to level 4 because you kill it and win and exit before the level up part
    -> add 'levels' to the actual game, so when you beat the boss you go to another group of monsters, more/better weapons available,
        monsters become harder to kill somehow? more damage? better crit chance?
fighting
    -> how can the fight mechanics actually become harder? they are purely chance based with the crit rate now
        can be similar to runescape, that you increase your 'to hit' chance, and then get access to better weapons that deal more damage & higher crit chance



#
